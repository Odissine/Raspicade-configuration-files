<!-- This is the EmulationStation Systems configuration file.
All systems must be contained within the <systemList> tag.-->

<systemList>
    <!-- Here's an example system to get you started. -->
    <system>
        <!-- A short name, used internally. -->
        <name>advmame</name>

        <!-- A "pretty" name, displayed in the menus and such. This one is optional. -->
        <fullname>AdvanceMAME Multiple Arcade Machine Emulator</fullname>

        <!-- The path to start searching for ROMs in. '~' will be expanded to $HOME or %HOMEPATH%, depending on platform.
        All subdirectories (and non-recursive links) will be included. -->
        <path>/home/pi/roms/roms_advmame</path>

        <!-- A list of extensions to search for, delimited by any of the whitespace characters (", \r\n\t").
        You MUST include the period at the start of the extension! It's also case sensitive. -->
        <extension>.zip .ZIP</extension>

        <!-- The shell command executed when a game is selected. A few special tags are replaced if found in a command, like %ROM% (see below). -->
        <command>clear;/home/pi/advancemame/bin/advmame %BASENAME%  > /dev/null 2>&1</command>
        <!-- This example would run the bash command "snesemulator /home/user/roms/snes/Super\ Mario\ World.sfc". -->

        <!-- The platform(s) to use when scraping. You can see the full list of accepted platforms in src/PlatformIds.cpp.
        It's case sensitive, but everything is lowercase. This tag is optional.
        You can use multiple platforms too, delimited with any of the whitespace characters (", \r\n\t"), eg: "genesis, megadrive" -->
        <platform>mame</platform>

        <!-- The theme to load from the current theme set. See THEMES.md for more information.
        This tag is optional; if not set, it will use the value of <name>. -->
        <theme>advmame</theme>
    </system>

    <!-- Here's an example system to get you started. -->
    <system>
        <!-- A short name, used internally. -->
        <name>mame</name>

        <!-- A "pretty" name, displayed in the menus and such. This one is optional. -->
        <fullname>MAME Multiple Arcade Machine Emulator</fullname>

        <!-- The path to start searching for ROMs in. '~' will be expanded to $HOME or %HOMEPATH%, depending on platform. 
        All subdirectories (and non-recursive links) will be included. -->
        <path>/home/pi/roms/roms_mame4all</path>

        <!-- A list of extensions to search for, delimited by any of the whitespace characters (", \r\n\t").
        You MUST include the period at the start of the extension! It's also case sensitive. -->
        <extension>.zip .ZIP</extension>

        <!-- The shell command executed when a game is selected. A few special tags are replaced if found in a command, like %ROM% (see below). -->
        <command>clear;/home/pi/mame4all-pi/mame %BASENAME%  > /dev/null 2>&1</command>
        <!-- This example would run the bash command "snesemulator /home/user/roms/snes/Super\ Mario\ World.sfc". -->

        <!-- The platform(s) to use when scraping. You can see the full list of accepted platforms in src/PlatformIds.cpp.
        It's case sensitive, but everything is lowercase. This tag is optional.
        You can use multiple platforms too, delimited with any of the whitespace characters (", \r\n\t"), eg: "genesis, megadrive" -->
        <platform>mame</platform>

        <!-- The theme to load from the current theme set. See THEMES.md for more information.
        This tag is optional; if not set, it will use the value of <name>. -->
        <theme>mame</theme>
    </system>

    <!-- Here's an example system to get you started. -->
    <system>
        <!-- A short name, used internally. -->
        <name>neogeopifba</name>

        <!-- A "pretty" name, displayed in the menus and such. This one is optional. -->
        <fullname>piFBA Finale Burn Alpha</fullname>

        <!-- The path to start searching for ROMs in. '~' will be expanded to $HOME or %HOMEPATH%, depending on platform. 
        All subdirectories (and non-recursive links) will be included. -->
        <!--<path>/home/pi/roms/roms_fba</path>-->

        <!-- A list of extensions to search for, delimited by any of the whitespace characters (", \r\n\t").
        You MUST include the period at the start of the extension! It's also case sensitive. -->
        <extension>.zip .ZIP .fba .FBA</extension>

        <!-- The shell command executed when a game is selected. A few special tags are replaced if found in a command, like %ROM% (see below). -->
        <command>clear; /home/pi/pifba/fba2x %ROM%  > /dev/null 2>&1</command>
        <!-- This example would run the bash command "snesemulator /home/user/roms/snes/Super\ Mario\ World.sfc". -->

        <!-- The platform(s) to use when scraping. You can see the full list of accepted platforms in src/PlatformIds.cpp.
        It's case sensitive, but everything is lowercase. This tag is optional.
        You can use multiple platforms too, delimited with any of the whitespace characters (", \r\n\t"), eg: "genesis, megadrive" -->
        <platform>neogeo</platform>

        <!-- The theme to load from the current theme set. See THEMES.md for more information.
        This tag is optional; if not set, it will use the value of <name>. -->
        <theme>neogeo</theme>
    </system>

    <!-- Here's an example system to get you started. -->
    <system>
        <!-- A short name, used internally. -->
        <name>neogeolibretropifba</name>

        <!-- A "pretty" name, displayed in the menus and such. This one is optional. -->
        <fullname>Libretro FBA Finale Burn Alpha</fullname>

        <!-- The path to start searching for ROMs in. '~' will be expanded to $HOME or %HOMEPATH%, depending on platform.
        All subdirectories (and non-recursive links) will be included. -->
        <path>/home/pi/roms/roms_fba</path>

        <!-- A list of extensions to search for, delimited by any of the whitespace characters (", \r\n\t").
        You MUST include the period at the start of the extension! It's also case sensitive. -->
        <extension>.zip .ZIP .fba .FBA</extension>

        <!-- The shell command executed when a game is selected. A few special tags are replaced if found in a command, like %ROM% (see below). -->
        <command>clear;/home/pi/retro/retroarch -L /home/pi/retro/fb_alpha_libretro.so -c /home/pi/retro/retroarch.cfg %ROM%  > /dev/null 2>&1</command>
        <!-- This example would run the bash command "snesemulator /home/user/roms/snes/Super\ Mario\ World.sfc". -->

        <!-- The platform(s) to use when scraping. You can see the full list of accepted platforms in src/PlatformIds.cpp.
        It's case sensitive, but everything is lowercase. This tag is optional.
        You can use multiple platforms too, delimited with any of the whitespace characters (", \r\n\t"), eg: "genesis, megadrive" -->
        <platform>neogeo</platform>

        <!-- The theme to load from the current theme set. See THEMES.md for more information.
        This tag is optional; if not set, it will use the value of <name>. -->
        <theme>neogeo</theme>
    </system>


    <!-- Here's an example system to get you started. -->
    <system>
        <!-- A short name, used internally. -->
        <name>neogeogngeo</name>

        <!-- A "pretty" name, displayed in the menus and such. This one is optional. -->
        <fullname>GnGeo Neogeo Emulator</fullname>

        <!-- The path to start searching for ROMs in. '~' will be expanded to $HOME or %HOMEPATH%, depending on platform. 
        All subdirectories (and non-recursive links) will be included. -->
        <path>/home/pi/roms/roms_gngeo</path>

        <!-- A list of extensions to search for, delimited by any of the whitespace characters (", \r\n\t").
        You MUST include the period at the start of the extension! It's also case sensitive. -->
        <extension>.zip .ZIP</extension>

        <!-- The shell command executed when a game is selected. A few special tags are replaced if found in a command, like %ROM% (see below). -->
        <command>clear; /home/pi/gngeo-pi/bin/gngeo -i /home/pi/roms/roms_gngeo %ROM%  > /dev/null 2>&1</command>
        <!-- This example would run the bash command "snesemulator /home/user/roms/snes/Super\ Mario\ World.sfc". -->

        <!-- The platform(s) to use when scraping. You can see the full list of accepted platforms in src/PlatformIds.cpp.
        It's case sensitive, but everything is lowercase. This tag is optional.
        You can use multiple platforms too, delimited with any of the whitespace characters (", \r\n\t"), eg: "genesis, megadrive" -->
        <platform>neogeo</platform>

        <!-- The theme to load from the current theme set. See THEMES.md for more information.
        This tag is optional; if not set, it will use the value of <name>. -->
        <theme>neogeo</theme>
    </system>

 <!-- Here's an example system to get you started. -->
    <system>
        <!-- A short name, used internally. -->
        <name>Stella</name>

        <!-- A "pretty" name, displayed in the menus and such. This one is optional. -->
        <fullname>Atari 2600 Machine Emulator</fullname>

        <!-- The path to start searching for ROMs in. '~' will be expanded to $HOME or %HOMEPATH%, depending on platform.
        All subdirectories (and non-recursive links) will be included. -->
        <path>/home/pi/roms/roms_stella</path>

        <!-- A list of extensions to search for, delimited by any of the whitespace characters (", \r\n\t").
        You MUST include the period at the start of the extension! It's also case sensitive. -->
        <extension>.bin .BIN .zip .ZIP</extension>

        <!-- The shell command executed when a game is selected. A few special tags are replaced if found in a command, like %ROM% (see below). -->
        <command>clear; /home/pi/retro/retroarch -L /home/pi/retro/stella_libretro.so -c /home/pi/retro/retroarch.cfg %ROM%  > /dev/null 2>&1</command>
        <!-- This example would run the bash command "snesemulator /home/user/roms/snes/Super\ Mario\ World.sfc". -->

        <!-- The platform(s) to use when scraping. You can see the full list of accepted platforms in src/PlatformIds.cpp.
        It's case sensitive, but everything is lowercase. This tag is optional.
        You can use multiple platforms too, delimited with any of the whitespace characters (", \r\n\t"), eg: "genesis, megadrive" -->
        <platform>atari2600</platform>

        <!-- The theme to load from the current theme set. See THEMES.md for more information.
        This tag is optional; if not set, it will use the value of <name>. -->
        <theme>atari2600</theme>
    </system>

    <!-- Here's an example system to get you started. -->
    <system>
        <!-- A short name, used internally. -->
        <name>Vectrex</name>

        <!-- A "pretty" name, displayed in the menus and such. This one is optional. -->
        <fullname>Vectrex Machine Emulator</fullname>

        <!-- The path to start searching for ROMs in. '~' will be expanded to $HOME or %HOMEPATH%, depending on platform.
        All subdirectories (and non-recursive links) will be included. -->
        <path>/home/pi/roms/roms_vecx</path>

        <!-- A list of extensions to search for, delimited by any of the whitespace characters (", \r\n\t").
        You MUST include the period at the start of the extension! It's also case sensitive. -->
        <extension>.vec .VEC</extension>

        <!-- The shell command executed when a game is selected. A few special tags are replaced if found in a command, like %ROM% (see below). -->
        <command>clear; /home/pi/retro/retroarch -L /home/pi/retro/vecx_libretro.so -c /home/pi/retro/retroarch.cfg %ROM%  > /dev/null 2>&1</command>
        <!-- This example would run the bash command "snesemulator /home/user/roms/snes/Super\ Mario\ World.sfc". -->

        <!-- The platform(s) to use when scraping. You can see the full list of accepted platforms in src/PlatformIds.cpp.
        It's case sensitive, but everything is lowercase. This tag is optional.
        You can use multiple platforms too, delimited with any of the whitespace characters (", \r\n\t"), eg: "genesis, megadrive" -->
        <platform></platform>

        <!-- The theme to load from the current theme set. See THEMES.md for more information.
        This tag is optional; if not set, it will use the value of <name>. -->
        <theme>vectrex</theme>
    </system>

    <!-- Here's an example system to get you started. -->
    <system>
        <!-- A short name, used internally. -->
        <name>Scummvm</name>

        <!-- A "pretty" name, displayed in the menus and such. This one is optional. -->
        <fullname>Scummvm classic graphical point-and-click adventure games emulator</fullname>

        <!-- The path to start searching for ROMs in. '~' will be expanded to $HOME or %HOMEPATH%, depending on platform.
        All subdirectories (and non-recursive links) will be included. -->
        <path>/home/pi/roms/roms_scummvm</path>

        <!-- A list of extensions to search for, delimited by any of the whitespace characters (", \r\n\t").
        You MUST include the period at the start of the extension! It's also case sensitive. -->
        <extension>.000 .001 .zip .ZIP</extension>

        <!-- The shell command executed when a game is selected. A few special tags are replaced if found in a command, like %ROM% (see below). -->
        <!--<command>clear; /home/pi/retro/retroarch -L /home/pi/retro/scummvm_libretro.so -c /home/pi/retro/retroarch.cfg %ROM%  > /dev/null 2>&1</command>-->
        <command>clear; /home/pi/retro/retroarch -L /home/pi/retro/scummvm_libretro.so -c /home/pi/retro/retroarch.cfg > /dev/null 2>&1</command>
        <!-- This example would run the bash command "snesemulator /home/user/roms/snes/Super\ Mario\ World.sfc". -->

        <!-- The platform(s) to use when scraping. You can see the full list of accepted platforms in src/PlatformIds.cpp.
        It's case sensitive, but everything is lowercase. This tag is optional.
        You can use multiple platforms too, delimited with any of the whitespace characters (", \r\n\t"), eg: "genesis, megadrive" -->
        <platform></platform>

        <!-- The theme to load from the current theme set. See THEMES.md for more information.
        This tag is optional; if not set, it will use the value of <name>. -->
        <theme>scummvm</theme>
    </system>


    <!-- Here's an example system to get you started. -->
    <system>
        <!-- A short name, used internally. -->
        <name>GB/GBC Gambatte</name>

        <!-- A "pretty" name, displayed in the menus and such. This one is optional. -->
        <fullname>GB /GBC Machine Emulator</fullname>

        <!-- The path to start searching for ROMs in. '~' will be expanded to $HOME or %HOMEPATH%, depending on platform.
        All subdirectories (and non-recursive links) will be included. -->
        <path>/home/pi/roms/roms_gambatte</path>

        <!-- A list of extensions to search for, delimited by any of the whitespace characters (", \r\n\t").
        You MUST include the period at the start of the extension! It's also case sensitive. -->
        <extension>.gb .GB .gbc .GBC .zip .ZIP</extension>

        <!-- The shell command executed when a game is selected. A few special tags are replaced if found in a command, like %ROM% (see below). -->
        <command>clear; /home/pi/retro/retroarch -L /home/pi/retro/gambatte_libretro.so -c /home/pi/retro/retroarch.cfg %ROM%  > /dev/null 2>&1</command>
        <!-- This example would run the bash command "snesemulator /home/user/roms/snes/Super\ Mario\ World.sfc". -->

        <!-- The platform(s) to use when scraping. You can see the full list of accepted platforms in src/PlatformIds.cpp.
        It's case sensitive, but everything is lowercase. This tag is optional.
        You can use multiple platforms too, delimited with any of the whitespace characters (", \r\n\t"), eg: "genesis, megadrive" -->
        <platform>gb,gbc</platform>

        <!-- The theme to load from the current theme set. See THEMES.md for more information.
        This tag is optional; if not set, it will use the value of <name>. -->
        <theme>gbc</theme>
    </system>

    <!-- Here's an example system to get you started. -->
    <system>
        <!-- A short name, used internally. -->
        <name>GBA Meteor</name>

        <!-- A "pretty" name, displayed in the menus and such. This one is optional. -->
        <fullname>GBA Meteor Machine Emulator</fullname>

        <!-- The path to start searching for ROMs in. '~' will be expanded to $HOME or %HOMEPATH%, depending on platform.
        All subdirectories (and non-recursive links) will be included. -->
        <path>/home/pi/roms/roms_meteor</path>

        <!-- A list of extensions to search for, delimited by any of the whitespace characters (", \r\n\t").
        You MUST include the period at the start of the extension! It's also case sensitive. -->
        <extension>.gba .GBA</extension>

        <!-- The shell command executed when a game is selected. A few special tags are replaced if found in a command, like %ROM% (see below). -->
        <command>clear; /home/pi/retro/retroarch -L /home/pi/retro/meteor_libretro.so -c /home/pi/retro/retroarch.cfg %ROM%  > /dev/null 2>&1</command>
        <!-- This example would run the bash command "snesemulator /home/user/roms/snes/Super\ Mario\ World.sfc". -->

        <!-- The platform(s) to use when scraping. You can see the full list of accepted platforms in src/PlatformIds.cpp.
        It's case sensitive, but everything is lowercase. This tag is optional.
        You can use multiple platforms too, delimited with any of the whitespace characters (", \r\n\t"), eg: "genesis, megadrive" -->
        <platform>Nintendo Game Boy Advance</platform>

        <!-- The theme to load from the current theme set. See THEMES.md for more information.
        This tag is optional; if not set, it will use the value of <name>. -->
        <theme>gba</theme>
    </system>


   <!-- Here's an example system to get you started. -->
    <system>
        <!-- A short name, used internally. -->
        <name>pcsx_rearmed</name>

        <!-- A "pretty" name, displayed in the menus and such. This one is optional. -->
        <fullname>PCSX Machine Emulator</fullname>

        <!-- The path to start searching for ROMs in. '~' will be expanded to $HOME or %HOMEPATH%, depending on platform.
        All subdirectories (and non-recursive links) will be included. -->
        <path>/home/pi/roms/roms_pcsx</path>

        <!-- A list of extensions to search for, delimited by any of the whitespace characters (", \r\n\t").
        You MUST include the period at the start of the extension! It's also case sensitive. -->
        <extension>.img .IMG .7z .7Z .iso .pbp .PBP .bin .BIN .cue .CUE</extension>

        <!-- The shell command executed when a game is selected. A few special tags are replaced if found in a command, like %ROM% (see below). -->
        <command>clear; /home/pi/retro/retroarch -L /home/pi/retro/pcsx_rearmed_libretro.so -c /home/pi/retro/retroarch.cfg %ROM%  > /dev/null 2>&1</command>
        <!-- This example would run the bash command "snesemulator /home/user/roms/snes/Super\ Mario\ World.sfc". -->

        <!-- The platform(s) to use when scraping. You can see the full list of accepted platforms in src/PlatformIds.cpp.
        It's case sensitive, but everything is lowercase. This tag is optional.
        You can use multiple platforms too, delimited with any of the whitespace characters (", \r\n\t"), eg: "genesis, megadrive" -->
        <platform>psx</platform>

        <!-- The theme to load from the current theme set. See THEMES.md for more information. 
        This tag is optional; if not set, it will use the value of <name>. -->
        <theme>psx</theme>
    </system>



<!-- Here's an example system to get you started. -->
    <system>
        <!-- A short name, used internally. -->
        <name>FCEU</name>

        <!-- A "pretty" name, displayed in the menus and such. This one is optional. -->
        <fullname>Nes Machine Emulator</fullname>

        <!-- The path to start searching for ROMs in. '~' will be expanded to $HOME or %HOMEPATH%, depending on platform.
        All subdirectories (and non-recursive links) will be included. -->
        <path>/home/pi/roms/roms_fceu</path>

        <!-- A list of extensions to search for, delimited by any of the whitespace characters (", \r\n\t").
        You MUST include the period at the start of the extension! It's also case sensitive. -->
        <extension>.fds .nes .NES .FDS .zip .ZIP</extension>

        <!-- The shell command executed when a game is selected. A few special tags are replaced if found in a command, like %ROM% (see below). -->
        <command>clear; /home/pi/retro/retroarch -L /home/pi/retro/fceumm_libretro.so  -c /home/pi/retro/retroarch.cfg %ROM%  > /dev/null 2>&1</command>
        <!-- This example would run the bash command "snesemulator /home/user/roms/snes/Super\ Mario\ World.sfc". -->

        <!-- The platform(s) to use when scraping. You can see the full list of accepted platforms in src/PlatformIds.cpp.
        It's case sensitive, but everything is lowercase. This tag is optional.
        You can use multiple platforms too, delimited with any of the whitespace characters (", \r\n\t"), eg: "genesis, megadrive" -->
        <platform>nes</platform>

        <!-- The theme to load from the current theme set. See THEMES.md for more information.
        This tag is optional; if not set, it will use the value of <name>. -->
        <theme>nes</theme>
    </system>

    <!-- Here's an example system to get you started. -->
    <system>
        <!-- A short name, used internally. -->
        <name>snes</name>

        <!-- A "pretty" name, displayed in the menus and such. This one is optional. -->
        <fullname>piSNES Super Nintendo Emulator</fullname>

        <!-- The path to start searching for ROMs in. '~' will be expanded to $HOME or %HOMEPATH%, depending on platform. 
        All subdirectories (and non-recursive links) will be included. -->
        <!--<path>/home/pi/roms/roms_snes9x</path>-->

        <!-- A list of extensions to search for, delimited by any of the whitespace characters (", \r\n\t").
        You MUST include the period at the start of the extension! It's also case sensitive. -->
        <extension>.zip .ZIP .smc .SMC</extension>

        <!-- The shell command executed when a game is selected. A few special tags are replaced if found in a command, like %ROM% (see below). -->
        <command>clear; /home/pi/pisnes/snes9x %ROM%  > /dev/null 2>&1</command>
        <!-- This example would run the bash command "snesemulator /home/user/roms/snes/Super\ Mario\ World.sfc". -->

        <!-- The platform(s) to use when scraping. You can see the full list of accepted platforms in src/PlatformIds.cpp.
        It's case sensitive, but everything is lowercase. This tag is optional.
        You can use multiple platforms too, delimited with any of the whitespace characters (", \r\n\t"), eg: "genesis, megadrive" -->
        <platform>snes</platform>

        <!-- The theme to load from the current theme set. See THEMES.md for more information.
        This tag is optional; if not set, it will use the value of <name>. -->
        <theme>snes</theme>
    </system>

    <!-- Here's an example system to get you started. -->
    <system>
        <!-- A short name, used internally. -->
        <name>snes</name>

        <!-- A "pretty" name, displayed in the menus and such. This one is optional. -->
        <fullname>SNES9x Libretro Super Nintendo Emulator</fullname>

        <!-- The path to start searching for ROMs in. '~' will be expanded to $HOME or %HOMEPATH%, depending on platform.
        All subdirectories (and non-recursive links) will be included. -->
        <path>/home/pi/roms/roms_snes9x</path>

        <!-- A list of extensions to search for, delimited by any of the whitespace characters (", \r\n\t").
        You MUST include the period at the start of the extension! It's also case sensitive. -->
        <extension>.zip .ZIP .smc .SMC</extension>

        <!-- The shell command executed when a game is selected. A few special tags are replaced if found in a command, like %ROM% (see below). -->
        <command>clear; /home/pi/retro/retroarch -L /home/pi/retro/snes9x_next_libretro.so -c /home/pi/retro/retroarch.cfg %ROM%  > /dev/null 2>&1</command>
        <!-- This example would run the bash command "snesemulator /home/user/roms/snes/Super\ Mario\ World.sfc". -->

        <!-- The platform(s) to use when scraping. You can see the full list of accepted platforms in src/PlatformIds.cpp.
        It's case sensitive, but everything is lowercase. This tag is optional.
        You can use multiple platforms too, delimited with any of the whitespace characters (", \r\n\t"), eg: "genesis, megadrive" -->
        <platform>snes</platform>

        <!-- The theme to load from the current theme set. See THEMES.md for more information.
        This tag is optional; if not set, it will use the value of <name>. -->
        <theme>snes</theme>
    </system>


    <!-- Here's an example system to get you started. -->
    <system>
        <!-- A short name, used internally. -->
        <name>n64</name>

        <!-- A "pretty" name, displayed in the menus and such. This one is optional. -->
        <fullname>Mupen64 Nintendo 64 Emulator</fullname>

        <!-- The path to start searching for ROMs in. '~' will be expanded to $HOME or %HOMEPATH%, depending on platform.
        All subdirectories (and non-recursive links) will be included. -->
        <path>/home/pi/roms/roms_mupen64plus</path>

        <!-- A list of extensions to search for, delimited by any of the whitespace characters (", \r\n\t").
        You MUST include the period at the start of the extension! It's also case sensitive. -->
        <extension>.n64 .N64</extension>

        <!-- The shell command executed when a game is selected. A few special tags are replaced if found in a command, like %ROM% (see below). -->
        <command>clear;/home/pi/mupen64plus/usr/local/bin/mupen64plus --resolution 1024x768 --corelib /home/pi/mupen64plus/usr/local/lib/libmupen64plus.so.2 --datadir /home/pi/mupen64plus/usr/local/share/mupen64plus --plugindir /home/pi/mupen64plus/usr/local/lib/mupen64plus --audio mupen64plus-audio-sdl  %ROM%  > /dev/null 2>&1</command>
        <!-- This example would run the bash command "snesemulator /home/user/roms/snes/Super\ Mario\ World.sfc". -->

        <!-- The platform(s) to use when scraping. You can see the full list of accepted platforms in src/PlatformIds.cpp.
        It's case sensitive, but everything is lowercase. This tag is optional.
        You can use multiple platforms too, delimited with any of the whitespace characters (", \r\n\t"), eg: "genesis, megadrive" -->
        <platform>n64</platform>

        <!-- The theme to load from the current theme set. See THEMES.md for more information.
        This tag is optional; if not set, it will use the value of <name>. -->
        <theme>n64</theme>
    </system>


    <!-- Here's an example system to get you started. -->
    <system>
        <!-- A short name, used internally. -->
        <name>n64</name>

        <!-- A "pretty" name, displayed in the menus and such. This one is optional. -->
        <fullname>Mupen64 Nintendo 64 Emulator</fullname>

        <!-- The path to start searching for ROMs in. '~' will be expanded to $HOME or %HOMEPATH%, depending on platform.
        All subdirectories (and non-recursive links) will be included. -->
        <!--<path>/home/pi/roms/roms_mupen64plus</path>-->

        <!-- A list of extensions to search for, delimited by any of the whitespace characters (", \r\n\t").
        You MUST include the period at the start of the extension! It's also case sensitive. -->
        <extension>.n64 .N64</extension>

        <!-- The shell command executed when a game is selected. A few special tags are replaced if found in a command, like %ROM% (see below). -->
	<command>clear; /home/pi/retro/retroarch -L /home/pi/retro/mupen64plus_libretro.so -c /home/pi/retro/retroarch.cfg %ROM%  > /dev/null 2>&1</command>        
        <!-- This example would run the bash command "snesemulator /home/user/roms/snes/Super\ Mario\ World.sfc". -->

        <!-- The platform(s) to use when scraping. You can see the full list of accepted platforms in src/PlatformIds.cpp.
        It's case sensitive, but everything is lowercase. This tag is optional.
        You can use multiple platforms too, delimited with any of the whitespace characters (", \r\n\t"), eg: "genesis, megadrive" -->
        <platform>n64</platform>

        <!-- The theme to load from the current theme set. See THEMES.md for more information.
        This tag is optional; if not set, it will use the value of <name>. -->
        <theme>n64</theme>
    </system>


    <!-- Here's an example system to get you started. -->
    <system>
        <!-- A short name, used internally. -->
        <name>libretropicodrive</name>

        <!-- A "pretty" name, displayed in the menus and such. This one is optional. -->
        <fullname>LibRetroPicoDrive MegaDrive Emulator</fullname>

        <!-- The path to start searching for ROMs in. '~' will be expanded to $HOME or %HOMEPATH%, depending on platform.
        All subdirectories (and non-recursive links) will be included. -->
        <path>/home/pi/roms/roms_picodrive</path>

        <!-- A list of extensions to search for, delimited by any of the whitespace characters (", \r\n\t").
        You MUST include the period at the start of the extension! It's also case sensitive. -->
        <extension>.zip .ZIP .smd .bin</extension>

        <!-- The shell command executed when a game is selected. A few special tags are replaced if found in a command, like %ROM% (see below). -->
        <command>clear; /home/pi/retro/retroarch -L /home/pi/retro/picodrive_libretro.so -c /home/pi/retro/retroarch.cfg %ROM%  > /dev/null 2>&1</command>
        <!-- This example would run the bash command "snesemulator /home/user/roms/snes/Super\ Mario\ World.sfc". -->

        <!-- The platform(s) to use when scraping. You can see the full list of accepted platforms in src/PlatformIds.cpp.
        It's case sensitive, but everything is lowercase. This tag is optional.
        You can use multiple platforms too, delimited with any of the whitespace characters (", \r\n\t"), eg: "genesis, megadrive" -->
        <platform>megadrive</platform>

        <!-- The theme to load from the current theme set. See THEMES.md for more information.
        This tag is optional; if not set, it will use the value of <name>. -->
        <theme>megadrive</theme>
    </system>
    
    <system>
        <!-- A short name, used internally. -->
        <name>dgen</name>

        <!-- A "pretty" name, displayed in the menus and such. This one is optional. -->
        <fullname>DGEN MegaDrive Emulator</fullname>

        <!-- The path to start searching for ROMs in. '~' will be expanded to $HOME or %HOMEPATH%, depending on platform.
        All subdirectories (and non-recursive links) will be included. -->
        <!--<path>/home/pi/roms/roms_picodrive</path>-->

        <!-- A list of extensions to search for, delimited by any of the whitespace characters (", \r\n\t").
        You MUST include the period at the start of the extension! It's also case sensitive. -->
        <extension>.zip .ZIP .smd .bin</extension>

        <!-- The shell command executed when a game is selected. A few special tags are replaced if found in a command, like %ROM% (see below). -->
        <command>clear; /home/pi/dgen/bin/dgen %ROM%  > /dev/null 2>&1</command>
        <!-- This example would run the bash command "snesemulator /home/user/roms/snes/Super\ Mario\ World.sfc". -->

        <!-- The platform(s) to use when scraping. You can see the full list of accepted platforms in src/PlatformIds.cpp.
        It's case sensitive, but everything is lowercase. This tag is optional.
        You can use multiple platforms too, delimited with any of the whitespace characters (", \r\n\t"), eg: "genesis, megadrive" -->
        <platform>megadrive</platform>

        <!-- The theme to load from the current theme set. See THEMES.md for more information.
        This tag is optional; if not set, it will use the value of <name>. -->
        <theme>megadrive</theme>
    </system>

</systemList>
